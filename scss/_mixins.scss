@use "variables";
@use "sass:color";

// Breakpoints
@mixin respond-to($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: 576px) { @content; }
  } @else if $breakpoint == tablet {
    @media (max-width: 768px) { @content; }
  } @else if $breakpoint == desktop {
    @media (min-width: 1024px) { @content; }
  }
}

// Bot√≥n base
@mixin button($bg: variables.$celeste, $color: variables.$blanco) {
  background-color: $bg;
  color: $color;
  padding: variables.$spacing-sm variables.$spacing-md;
  border-radius: 100px;
  text-decoration: none;
  font-weight: 600;
  display: inline-block;
  transition: all 0.5s variables.$bouncy;
  text-align: center;

  &:hover {
    background-color: color.adjust($bg, $lightness: -5%);
    text-decoration: none;
    filter: variables.$shadow-light;
    transform: translateY(-5px);
  }
}

@mixin button-outlined($color: variables.$blanco) {
  color: $color;
  border: 1px solid $color;
  padding: variables.$spacing-sm variables.$spacing-md;
  border-radius: 100px;
  text-decoration: none;
  font-weight: 600;
  display: inline-block;
  transition: all 0.5s variables.$bouncy;
  text-align: center;

  &:hover {
    background-color: #00000024;
    text-decoration: none;
    transform: translateY(-5px);
  }
}

@mixin accordion($bg: variables.$celeste, $color: variables.$gris-oscuro){
  background-color: $bg;
  color: $color;
  cursor: pointer;
  padding: 40px 35px;
  border-radius: variables.$border-radius;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  font-size: 1em;
  font-weight: 500;
  transition: 0.4s;
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;
  z-index: 2;

  svg {
    margin-right: 1em;
    transition: transform 0.3s variables.$bouncy;
  }

  &.active,
  &:hover {
    background-color: color.adjust($bg, $lightness: -10%);
  }

  &.active{
    border-radius: variables.$border-radius variables.$border-radius 0 0;
    svg {
      transform: rotate(180deg);
    }
  }
}